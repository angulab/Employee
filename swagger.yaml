swagger: '2.0'
info:
  description: IATec Employee Portal API
  version: "1.0.0-preview-17"
  title: Employee Portal API
  contact:
    email: andre.guilherme@iatec.com
schemes:
 - https
securityDefinitions:
  bearer_token:
    type: oauth2
    authorizationUrl: 'https://login-dev.sdasystems.org/connect/authorize'
    flow: implicit
    scopes:
      openid: Access the user identity
      rhonline:all: Full access to RH Online user data
security:
  - bearer_token: ['rhonline:all']
host: 'ws-rh-online-dev.sdasystems.org'
basePath: '/'
tags:
  - name: Paychecks
    description: "Paycheck-related methods"
  - name: Reimbursement
    description: "Reimbursement-related methods"
  - name: Vacation
    description: "Receipt-related methods"
  - name: Profile
    description: "Manage the employee's profile"
paths:
  '/paychecks/standard':
    get:
      tags: 
        - Paychecks
      summary: 'List standard paychecks'
      description: 'Get list of available standard paychecks'
      operationId: listStandardPaychecks
      produces:
        - "application/json"
      parameters:
        - name: count
          in: query
          description: The maximum number of items the search will bring.
          type: integer  
        - name: maxperiod
          in: query
          description: Limit the search to the specified period of after. The period format is YYYYMM
          type: integer
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PaycheckListingItem'
        400:
          description: 'Wrong parameters'
  '/paychecks/13th':
    get:
      tags: 
        - Paychecks
      summary: 'List 13th paychecks'
      description: 'Get list of available 13th paychecks'
      operationId: list13thPaychecks
      produces:
        - "application/json"
      parameters:
        - name: count
          in: query
          description: The maximum number of items the search will bring.
          type: integer
        - name: maxperiod
          in: query
          description: Limit the search to the specified period of after. The period format is YYYYMM
          type: integer
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PaycheckListingItem'
        400:
          description: 'Wrong parameters'
  '/paychecks/standard/{period}':
    parameters:
      - name: period
        in: path
        required: true
        type: integer
    get:
      tags: 
        - Paychecks
      summary: 'Get standard paycheck'
      description: 'Get the standard paycheck for a specific period'
      operationId: getPaycheck
      produces:
        - "application/json"
      parameters:
        - name: includeInternalAccount
          in: query
          type: boolean
          default: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Paycheck'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Paycheck not found'
  '/paychecks/13th/{period}':
    parameters:
      - name: period
        in: path
        required: true
        type: integer
    get:
      tags: 
        - Paychecks
      summary: 'Get 13th paycheck'
      description: 'Get the 13th paycheck for a specific period'
      operationId: get13thPaycheck
      produces:
        - "application/json"
      parameters:
        - name: includeInternalAccount
          in: query
          type: boolean
          default: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Paycheck'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Paycheck not found'
  '/reimbursement/monthly/statements':
    get:
      tags: 
        - Reimbursement
      summary: 'List monthly reimbursement statements'
      description: 'Get list of available monthly reimbursement statements'
      operationId: listMonthlyStatements
      produces:
        - "application/json"
      parameters:
        - name: count
          in: query
          description: The maximum number of items the search will bring.
          type: integer
        - name: maxperiod
          in: query
          description: Limit the search to the specified period of after. The period format is YYYYMM
          type: integer
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/MonthlyReimbursementStatementListingItem'
              
        400:
          description: 'Wrong parameters'
  '/reimbursement/monthly/statements/{period}':
    parameters:
      - name: period
        in: path
        required: true
        type: integer
    get:
      tags: 
        - Reimbursement
      summary: 'Get monthly reimbursement statement'
      description: 'Get a specific monthly reimbursent statement'
      operationId: getMonthlyStatement
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/MonthlyReimbursementStatement'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Reimbursement not found'
  # '/reimbursement/travel/statements':
  #   get:
  #     tags: 
  #       - Reimbursement
  #     summary: 'List travel reimbursement statements'
  #     description: 'Get list of available travel reimbursement statements'
  #     operationId: listTravelStatements
  #     produces:
  #       - "application/json"
  #     parameters:
  #       - name: count
  #         in: query
  #         description: The maximum number of items the search will bring.
  #         type: integer
  #       - name: maxperiod
  #         in: query
  #         description: Limit the search to after the specified period. The period format is YYYYMM
  #         type: integer
  #     responses:
  #       200:
  #         description: 'Success'
  #         schema:
  #           type: array
  #           items:
  #             $ref: '#/definitions/TravelReimbursementStatementListingItem'
  #       400:
  #         description: 'Wrong parameters'          
  '/reimbursement/travel/statements/{statementId}':
    parameters:
      - name: statementId
        in: path
        required: true
        type: integer
    get:
      tags: 
        - Reimbursement
      summary: 'Get travel reimbursement statement'
      description: 'Get a specific monthly reimbursent statement'
      operationId: getTravelStatement
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/TravelReimbursementStatement'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Reimbursement not found'
  '/vacation/receipts':
    get:
      tags: 
        - Vacation
      summary: 'List vacation receipts'
      description: 'Get a list of available vacation receipts'
      operationId: listVacationReceipts
      produces:
        - "application/json"
      parameters:
        - name: count
          in: query
          description: The maximum number of items the search will bring.
          type: integer
        - name: maxperiod
          in: query
          type: integer
          description: Limit the search to the specified period or after.
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/VacationReceiptListingItem'
        400:
          description: 'Wrong parameters'
  '/vacation/receipts/{period}':
    parameters:
      - name: period
        in: path
        required: true
        type: integer
    get:
      tags: 
        - Vacation
      summary: 'Get vacation receipt'
      description: 'Get the vacation receipt for a specific period'
      operationId: getVacationReceipt
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/VacationReceipt'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Paycheck not found'
  '/reports/income':
    get:
      tags: 
        - Reports
      summary: 'List income reports'
      description: 'Get a list of all available income reports'
      operationId: listIncomeReports
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/IncomeReportListingItem'
        400:
          description: 'Invalid parameters'
  '/reports/income/{code}':
    parameters: 
      - name: code
        in: path
        required: true
        type: string
    get:
      tags: 
        - Reports
      summary: 'Get income report'
      description: 'Get the income report of a year'
      operationId: getIncomeReport
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/IncomeReport'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Report not found'
  '/reports/tithe':
    get:
      tags:
        - Reports
      summary: 'List tithe reports'
      operationId: listTitheReports
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/TitheReportListingItem'
  '/reports/tithe/{period}':
    parameters:
      - name: period
        in: path
        required: true
        type: integer
    get:
      tags: 
        - Reports
      summary: 'Get tithe report'
      description: 'Get the tithe report for a specific period'
      operationId: getTitheReport
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/TitheReport'
        400:
          description: 'Wrong parameters'
        404:
          description: 'Report not found'
  '/profile/contact-info':
    get:
      tags:
        - Profile
      summary: 'Get contact info'
      description: "Get the employee's contact info"
      operationId: getContactInfo
      produces:
        - "application/json"
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/ContactInfo'
        400:
          description: 'Invalid parameters'
    put:
      tags:
        - Profile
      summary: 'Set contact info'
      description: "Set the employee's contact info"
      operationId: setContactInfo
      parameters: 
        - in: body
          name: contactInfo
          schema:
            $ref: '#/definitions/ContactInfo'
      produces:
        - "application/json"
      responses:
        201:
          description: 'Success'
        400:
          description: 'Invalid parameters'
definitions:
  Paycheck:
    type: object
    properties:
      entity:
        $ref: '#/definitions/Entity'
      employee:
        $ref: '#/definitions/Employee'
      period:
        type: string
      amounts:
        type: array
        items:
          $ref: '#/definitions/AmountsEntry'
      depositInfo:
        $ref: '#/definitions/DepositInfo'
      additionalInfo:
        type: array
        items:
          type: string
      baseSalary:
        type: number
      inssBalance:
        type: number
      fgtsBase:
        type: number
      currentMonthFgts:
        type: number
      grossIrrfBase:
        type: number
      irrfDeduction:
        type: number
      netIrrfBase:
        type: number
      inssClass:
        type: number
      inssValueDescription:
        type: string
      inssBase:
        type: number
      totalEarnings:
        type: number
      totalDiscounts:
        type: number
      netValue:
        type: number
      internalAccountInfo:
        $ref: '#/definitions/InternalAccount'
  Entity:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      document:
        type: string
  Employee:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      position:
        type: string
      document:
        $ref: '#/definitions/EmployeeDocument'
      address:
        type: string
      department:
        type: string
      isReligious:
        type: boolean
      admissionDate:
        type: string
        format: date
  EmployeeDocument:
    type: object
    properties:
      cbo: 
        type: string
      number: 
        type: string
      series: 
        type: string
  VacationReceipt:
    type: object
    properties:
      employee:
        $ref: '#/definitions/EmployeeLite'
      amounts:
        type: array
        items:
          $ref: '#/definitions/AmountsEntry'
      totalEarnings:
        type: number
      totalDiscounts:
        type: number
      netValue:
        type: number
      acquisitionPeriod:
        $ref: '#/definitions/DateRange'
      vacationPeriod:
        $ref: '#/definitions/DateRange'
      bonusPeriod:
        $ref: '#/definitions/DateRange'
  AmountsEntry:
    type: object 
    properties:
      code:
        type: string
      description:
        type: string
      reference:
        type: number
      earning:
        type: number
      discount:
        type: number
      other:
        type: number
  InternalAccount:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/InternalAccountEntry'
  InternalAccountEntry:
    type: object
    properties:
      day:
        type: integer
      code:
        type: string
      description:
        type: string
      value:
        type: number
  MonthlyReimbursementStatement:
    type: object
    properties:
      employee:
        $ref: '#/definitions/EmployeeLite'
      entries:
        type: array
        items:
          $ref: '#/definitions/MonthlyReimbursementStatementEntry'
      total:
        type: number
      internalAccount:
        $ref: '#/definitions/InternalAccount'
  MonthlyReimbursementStatementEntry:
    type: object
    properties:
      code:
        type: string  
      description:
        type: string
      declared:
        type: number
      reimbursed:
        type: number
      discount:
        type: number
  TravelReimbursementStatement:
    type: object
    properties:
      employee:
        $ref: '#/definitions/EmployeeLite'
      entries:
        type: array
        items:
          $ref: '#/definitions/TravelReimbursementStatementEntry'
      total:
        type: number
      depositInfo:
        $ref: '#/definitions/DepositInfo'
  TravelReimbursementStatementEntry:
    type: object
    properties:
      description:
        type: string
      provenValue:
        type: number
      unprovenValue:
        type: number
  IncomeReport:
    type: object
    properties:
      calendarYear:
        type: string
      fiscalYear:
        type: string
      paymentSourceName:
        type: string
      paymentSourceDocument:
        type: string
      beneficiaryDocument:
        type: string
      beneficiaryFullName:
        type: string
      beneficiaryDepartment:
        type: string
      beneficiaryIncomeNature:
        type: string
      frame3Row1:
        type: string
      frame3Row2:
        type: string
      frame3Row3:
        type: string
      frame3Row4:
        type: string
      frame3Row5:
        type: string
      frame4Row1:
        type: string
      frame4Row2:
        type: string
      frame4Row3:
        type: string
      frame4Row4:
        type: string
      frame4Row5:
        type: string
      frame4Row6:
        type: string
      frame4Row7:
        type: string
      frame5Row1:
        type: string
      frame5Row2:
        type: string
      frame5Row3:
        type: string
      frame6Row1:
        type: string
      frame6Row2:
        type: string
      frame6Row3:
        type: string
      frame6Row4:
        type: string
      frame6Row5:
        type: string
      frame6Row6:
        type: string
      complementaryInfo:
        type: array
        items:
          type: string
      responsibleName:
        type: string
      issuanceDate:
        type: string
        format: datetime
  TitheReport:
    type: object
    properties:
      employee:
        $ref: '#/definitions/EmployeeLite'
      entries:
        type: array
        items:
          $ref: '#/definitions/TitheReportEntry'
      entries13th:
        type: array
        items:
          $ref: '#/definitions/TitheReportEntry'
      titheValue:
        type: number
      suggestedOfferingValue:
        type: number
  TitheReportEntry:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      value:
        type: number
  BaseListingItem:
    type: object
    properties:
      period:
        type: integer
  PaycheckListingItem:
    allOf:
      - $ref: '#/definitions/BaseListingItem'
      - type: object
        properties:
          netValue:
            type: number
  MonthlyReimbursementStatementListingItem:
    allOf:
      - $ref: '#/definitions/BaseListingItem'
      - type: object
        properties:
          value:
            type: number
  TravelReimbursementStatementListingItem:
    type: object
    properties:
      id:
        type: integer
      total:
        type: number
      deposited:
        type: boolean
  VacationReceiptListingItem:
    allOf:
      - $ref: '#/definitions/BaseListingItem'
      - type: object
        properties:
          date:
            type: string
            format: date
          netValue:
            type: number
  IncomeReportListingItem:
    type: object
    properties:
      year:
        type: integer
      code:
        type: string
  TitheReportListingItem:
    allOf:
      - $ref: '#/definitions/BaseListingItem'
      - type: object
        properties:
          titheValue:
            type: number
  ContactInfo:
    type: object
    properties:
      address:
        $ref: '#/definitions/ContactInfoAddress'
      homePhone:
        $ref: '#/definitions/ContactInfoPhone'
      mobilePhone:
        $ref: '#/definitions/ContactInfoPhone'
      email:
        type: string
  ContactInfoAddress:
    type: object
    properties:
      street:
        type: string
      number:
        type: string
      supplement:
        type: string
      neighborhood:
        type: string
      zip:
        type: string
      city:
        type: string
      state:
        type: string
  ContactInfoPhone:
    type: object
    properties:
      prefix:
        type: string
      number:
        type: string
      additionalInfo:
        type: string
  DateRange:
    type: object
    properties:
      begin:
        type: string
        format: date
      end: 
        type: string
        format: date
  EmployeeLite:
    type: object
    properties:
      entityName:
        type: string
      departmentName:
        type: string
      code:
        type: string
      name:
        type: string
  DepositInfo:
    type: object
    properties:
      account:
        type: string
      date:
        type: string
        format: date